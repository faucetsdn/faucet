FROM ubuntu:latest

ENV OVSV="2.7.3"

ENV AG="apt-get -qqy --no-install-recommends"
ENV DEBIAN_FRONTEND=noninteractive
ENV PIPDEPS="setuptools wheel virtualenv"
ENV PIP="pip -q --no-cache-dir install --upgrade"
ENV PIP3="pip3 -q --no-cache-dir install --upgrade"
ENV SETUPQ="setup.py -q"

###
### When apt-get'ing, make sure apt-update always run first per RUN
### to ensure Docker layer cache doesn't use a stale apt database.
###

COPY ./docker/setupproxy.sh /

RUN \
  ./setupproxy.sh && \
  $AG update && \
  $AG install \
    autoconf \
    automake \
    apt-transport-https \
    bc \
    build-essential \
    curl \
    fping \
    gcc \
    git \
    iperf \
    iputils-ping \
    ladvd \
    libffi-dev \
    libpython2.7-dev \
    libpython3-dev \
    libssl-dev \
    libtool \
    libyaml-dev \
    linux-headers-generic \
    lsof \
    netcat \
    ndisc6 \
    net-tools \
    netcat-openbsd \
    openvswitch-common \
    parallel \
    patch \
    psmisc \
    python-pip \
    python3-pip \
    software-properties-common \
    sudo \
    tcpdump \
    tshark \
    vlan \
    wget \
    wpasupplicant

###
### TODO: pytype may be slightly stale due to Docker caching.
### Specify versions as we do for mininet if possible.
###

RUN \
  git config --global url.https://github.com/.insteadOf git://github.com/ && \
  /bin/echo -e "https://github.com/mininet/mininet\nhttps://github.com/google/pytype.git" | parallel git clone


### slim down mininet dependencies (to avoid installing X11)
RUN \
  ./setupproxy.sh && \
  $AG update && \
  cd mininet && git checkout 2.2.2 && cd .. && \
  perl -pi -e "s/setup.py/${SETUPQ}/g" mininet/Makefile && \
  perl -pi -e "s/apt-get/${AG}/g" mininet/util/install.sh && \
  for i in ssh pep8 pyflakes python-pexpect pylint xterm ; do perl -pi -e "s/${i}//g" mininet/util/install.sh ; done && \
  mininet/util/install.sh -n && \
  rm -rf mininet


RUN \
  ./setupproxy.sh && \
  $AG update && \
  wget -q http://openvswitch.org/releases/openvswitch-$OVSV.tar.gz && \
  tar xf openvswitch-$OVSV.tar.gz && \
  cd openvswitch-$OVSV && \
  ./boot.sh && ./configure --enable-silent-rules && make -s install && \
  cd .. && \
  rm -rf openvswitch-$OVSV*


RUN \
  ./setupproxy.sh && \
  $AG update && \
  $AG purge pylint && \
  $PIP3 pip && \
  easy_install -q -U pip && \
  $PIP pip && \
  $PIP multiprocessing scapy==2.3.2 $PIPDEPS && \
  $PIP3 $PIPDEPS

RUN \
  cd pytype && git submodule init && git submodule update && python2 $SETUPQ install && cd .. && rm -rf pytype

###
### To maximize Docker caching, try to keep invariant dependencies above this line.
###

COPY ./ /faucet-src/

RUN \
  $PIP -r /faucet-src/test-requirements.txt && \
  $PIP3 -r /faucet-src/requirements.txt && \
  $PIP3 -r /faucet-src/test-requirements.txt && \
  $PIP3 /faucet-src

CMD ["/faucet-src/docker/runtests.sh"]
